plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('ks.properties').newDataInputStream())
} catch(Exception ignored) {}

android {
    compileSdk 31

    defaultConfig {
        applicationId "im.dacer.currency"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "im.dacer.currency.CustomTestRunner"

        buildConfigField("String", "CURRENCYLAYER_ACCESS_KEY", "\"" + getCurrencylayerAccess() + "\"")
    }

    signingConfigs {
        release {
            def storeFilePath = properties.getProperty("storeFile")
            storeFile(storeFilePath != null ? file(storeFilePath) : null)
            storePassword properties.getProperty("storePassword")
            keyAlias properties.getProperty("keyAlias")
            keyPassword properties.getProperty("keyPassword")
        }
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            versionNameSuffix '-DEBUG'
            applicationIdSuffix '.debug'
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "JetCurrency-${variant.name}-${variant.versionName}(${variant.versionCode}).apk"
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.5'
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/ASM"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    hilt {
//        enableAggregatingTask = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation "com.squareup.moshi:moshi:1.12.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.12.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation "com.notkamui.libs:keval:0.8.0"
    implementation "androidx.window:window:1.0.0"

    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.0-alpha06"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha02'
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "androidx.test:core-ktx:$androidx_test_version"
    testImplementation "androidx.test:runner:$androidx_test_version"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.7.3"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation 'app.cash.turbine:turbine:0.7.0'


    androidTestImplementation "androidx.test:core-ktx:$androidx_test_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}

def getCurrencylayerAccess() {
    return project.findProperty("currencylayer_access_key")
}